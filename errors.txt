Error 1: Repeated print statements [SOLVED | 2024-12-25 | 6:34 AM]
> Scenario:
     Input 1: quikc 
     Output: Invalid

     Input 2: Boy
     Output: Invalid, Valid

     Input 3: liek
     Output: Invalid, Invalid, Valid, Invalid

     Final Output in the Console:  Invalid, Invalid, Valid, Invalid, Valid, Invalid

> (Possible) Reason: 
     The FSM resets to the start state after every word, meaning, it reprocesses the words,
          thus why it reprints previous resulting states.

     There is no mechanism to skip the processed words.

> Possible Solution: 
     Find a way to track and skip processed words.

Error 2: Valid words tagged as `Invalid` (Some forms of verbs or plural nouns are tagged as `Invalid`)
> Scenario: 
     Input: Jump
     Resulting State: Valid

     Input: Jumps
     Resulting State: Invalid

     Input: Jumping
     Resulting State: Invalid

     Input: Jumped
     Resulting State: Invalid

     Input: Run
     Resulting State: Valid

     Input: Running 
     Resulting State: Valid

     Input: Runs
     Resulting State: Invalid

     Input: Ran
     Resulting State: Valid

> (Possible) Reason: 
     Part of the limitations of the word list itself. (NLKT prolly doesn't cover a range of inflected words.) 

> Possible Solution:
     Not sure if we're going to encounter the same issue if we switch to Tagalog Dictionary (but most likely, if we can't find a comprehensive tagalog word list).
          Not sure din if we're going to deal with it, if ever. 
          ++ Refer to Kyrelle's comment on the scope and limitations (pg. 5, https://docs.google.com/document/d/1S9fxzwxTJWsBQdqf16B5bnyN89oqwDOck3RtadYaaYg/edit?tab=t.0 )

     In such case, we can find/look for a comprehensive pre-defined tagalog dictionary/word list containing
          the root words and the common conjugations or forms of the words.

--- Lester's Notes / 2024-12-25 / AS OF 6:35 AM ---
1. Fixed Error 1 where the print statements are doubled if the text is pasted on the text widget.
   SOLUTION: I encountered a lot of different errors while trying to solve the root problem. Had to think of many different ways to bypass the error but to no avail.
   Changed my tactic and thought of another way to ensure proper usage of the application. Further details will be discussed on the next synchronous meeting with the team.

2. Haven't solved the print statement issue yet where the actual words which are tagged valid or invalid displays on the terminal itself together with its transition states.
   TARGET DATE: Hopefully I can solve this one during or after December 26, before the team conducts a meeting again.

P.S These are rough descriptions only of what I've encountered during the debugging process. Took me 6 long hours to be able to make things work with the first error. T___T
    Will share all the details to the team next meeting! - Lester, tired already.

[EDIT] Another thing pala, as you can see, another file has been added to our repository. I wanted to make a new one so I can get a fresh start sa new implementation. Please take the time to look at it.
       Was so frustrated with the app.py file that I had to move on to another file. LMAO HASHAHAHASHAHASHA (bro was traumatized!)~

--- Lester's Notes / 2024-12-27 / AS OF 12:21 AM ---
1. I already implemented the feature we talked about last meeting. You can now see the specific word that has been tagged either valid or invalid. 

2. Need to have a meeting with the team so we can discuss the next step of our plan.
   I need to explain a lot of things since there were numerous changes made on the implementation of the working code. You'll see it once you try the program.

--- New Issues: Tagalog Dictionary Implementation / 2024-12-29 ---
1. [INITIAL] ilipino Dictionary Reference: https://archive.org/details/350306621filipinodictionary/page/n11/mode/2up  
     Issue: Has too many words, would require arduous labor to transfer to the filipino_dixt.text
     Possible Solution:
     - Filter out the reference and only choose commonly used words.
     - Find another source with fewer and more common words.

2. Filipino words with hypens are not read by the program as valid as our program ignores punctations.
     Example: mag-abante, mag-abay, ipang-abot, etc.

3. Words identified as invalid does not fully turn back into black after being edited by the user.

--- Filipino Words Implementation Update / 2025-01-02 / As of 3:30 AM
1. The filipino_dict.txt file is currently a work-in-progress (WIP).
     - I chose to discard the initial reference and instead made use of ChatGPT as well as many other websites to generate the Filipino word list
     - The current file is not yet finished as it only currently contains 3413 words.
     - Will add more and update this on the following days.

     NOTE: the next phase of coding (upgrading the User Interface) may now begin as futher updates on my part will not affect the spellchecker.py file.

2. The second and third issues listed on the previous note (New Issues: Tagalog Dictionary Implementation) remains the same [Not Fixed].  